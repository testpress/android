name: Generate Debug APK for a branch

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch name to build'
        required: true
      local_domain:
        description: 'Local IP/domain only (e.g., 192.168.1.101, lmsdemo.testpres.in)'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      GITHUB_ACCESS_KEY: ${{ secrets.GH_ACCESS_KEY }}
      GITHUB_USERNAME: ${{ secrets.GH_USERNAME }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch_name }}

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Caching ruby dependencies
        uses: actions/cache@v3
        with:
          path: 'vendor/bundle'
          key: ${{ runner.os }}-gems-${{ secrets.GEMS_CACHE_VERSION }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Cache Zoom SDK files
        id: zoom-cache
        uses: actions/cache@v3
        with:
          path: |
            ./mobilertc
            ./commonlib
          key: zoom_sdk_files

      - name: Setup Zoom SDK
        if: steps.zoom-cache.outputs.cache-hit != 'true'
        run: |
          wget https://media.testpress.in/static/android/zoom_sdk.zip
          unzip -o ./zoom_sdk.zip

      - name: Caching Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies to support ruby project
        run: |
          bundle config --global set deploy_platform_default x86_64-linux
          bundle install

      - name: Replace host_url in build.gradle
        run: |
          sed -i "s|def host_url = '.*'|def host_url = '${{ github.event.inputs.local_domain }}'|" app/build.gradle

      - name: Build and distribute app
        run: |
          export LC_ALL=en_US.UTF-8
          export LANG=en_US.UTF-8
          bundle exec fastlane generate_debug_apk

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: app/build/outputs/apk/debug/app-debug.apk
